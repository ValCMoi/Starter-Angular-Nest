version: '3.5'

networks:
  web:
    ipam:
      config:
        - subnet: ${WEB_NETWORK}
services: # Here we define our service(s)
  db:
    networks:
      web:
          ipv4_address: ${IP_MYSQL}
    image: mysql:${MYSQL_VERSION}
    container_name: ${PROJECT_NAME}-MYSQL-DATABASE
    hostname: MYSQL-DATABASE-${PROJECT_NAME}
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT_EXPOSE}:${MYSQL_PORT_INIT}"

  phpmyadmin:
    container_name: ${PROJECT_NAME}-PHP-MY-ADMIN
    networks:
      web:
          ipv4_address: ${IP_PMA}
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - ${MY_ADMIN_PORT_EXPOSE}:80
  

  api:
    container_name: ${PROJECT_NAME}-Back-NESTJS
    env_file:
      - .env
    networks:
      web:
          ipv4_address: ${IP_NEST}
    depends_on:
      - phpmyadmin
      - db
    build:
      dockerfile: ../Nest.dockerfile
      context: ./backend
    volumes:
      - ./backend:/usr/src/app/
    command: >
      bash -c "npm install && npm run start:dev"
    ports:
      - ${NEST_PORT_EXPOSE}:${NEST_PORT_INIT}

  angular-service: # The name of the service
    container_name: ${PROJECT_NAME}-Front-ANGULAR  # Container name
    networks:
      web:
          ipv4_address: ${IP_ANGULAR}
    build: 
      context: ./frontend
      dockerfile: ../Angular.dockerfile # Location of our Dockerfile
    volumes: # Volume binding
      - './frontend:/usr/src/app' 
    ports: 
      - ${ANGULAR_PORT_EXPOSE}:${ANGULAR_PORT_INIT} # Port mapping
    command: > 
      bash -c "npm install && ng serve --host 0.0.0.0 --port ${ANGULAR_PORT_INIT}"